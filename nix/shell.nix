{ pkgs ? import <nixpkgs> { config.android_sdk.accept_license = true; } }:

let
  android = {
    versions = {
      tools = "26.1.1";
      platformTools = "31.0.3";
      buildTools = "30.0.3";
      ndk = [ "22.0.7026061" ];
      cmake = "3.18.1";
      emulator = "30.9.0";
    };
    platforms = [ "28" "29" "30" ];
    abis = [ "x86_64" ];
    extras = [ "extras;google;gcm" ];
    imageTypes = [ "google_apis_playstore" ];
  };

  androidEnv = pkgs.androidenv;

  androidComposition = androidEnv.composeAndroidPackages {
    toolsVersion = android.versions.tools;
    platformToolsVersion = android.versions.platformTools;
    buildToolsVersions = [ android.versions.buildTools ];
    platformVersions = android.platforms;
    abiVersions = android.abis;

    includeSources = false;
    includeSystemImages = false;
    includeEmulator = true;
    systemImageTypes = android.imageTypes;
    emulatorVersion = android.versions.emulator;

    includeNDK = true;
    ndkVersions = android.versions.ndk;
    cmakeVersions = [ android.versions.cmake ];

    useGoogleAPIs = false;
    includeExtras = android.extras;

    # Accepted licenses
    extraLicenses = [
      "android-sdk-preview-license"
      "android-googletv-license"
      "android-sdk-arm-dbt-license"
      "google-gdk-license"
      "intel-android-extra-license"
      "intel-android-sysimage-license"
      "mips-android-sysimage-license"
    ];
  };

  androidSdk = androidComposition.androidsdk;
  platformTools = androidComposition.platform-tools;
  jdk = pkgs.jdk8;
in pkgs.mkShell rec {
  name = "androidenv-demo";
  packages = [ androidSdk platformTools jdk pkgs.android-studio pkgs.gradle ];

  LANG = "C.UTF-8";
  LC_ALL = "C.UTF-8";
  JAVA_HOME = jdk.home;

  # Note: ANDROID_HOME is deprecated. Use ANDROID_SDK_ROOT.
  ANDROID_SDK_ROOT = "${androidSdk}/libexec/android-sdk";
  ANDROID_NDK_ROOT = "${ANDROID_SDK_ROOT}/ndk-bundle";

  # Ensures that we don't have to use a FHS env by using the nix store's aapt2.
  GRADLE_OPTS =
    "-Dorg.gradle.project.android.aapt2FromMavenOverride=${ANDROID_SDK_ROOT}/build-tools/${android.versions.buildTools}/aapt2";

  shellHook = ''
    # Add cmake to the path.
    cmake_root="$(echo "$ANDROID_SDK_ROOT/cmake/${android.versions.cmake}"*/)"
    export PATH="$cmake_root/bin:$PATH"
    # Write out local.properties for Android Studio.
    cat <<EOF > local.properties
    # This file was automatically generated by nix-shell.
    sdk.dir=$ANDROID_SDK_ROOT
    ndk.dir=$ANDROID_NDK_ROOT
    cmake.dir=$cmake_root
    EOF
  '';
}
